---
- hosts: all
  become: yes
  # NOTE to self: don't set owner and group of /usr/lib/ldapi-server
  # Also, use "tags: never,install" on things that should only be run
  # once, and use a different tag on things that can be run repeatedly.
  tasks:
  - include_tasks: tasks/mysql.yaml
    tags: [ never, db ]
    when: populate_test_database|default(False)|bool
  - name: Port 80 proxy conf
    blockinfile:
      path: /etc/apache2/sites-available/qa.languagedepot.org_admin.conf
      block: |2
            ProxyPreserveHost On
            ProxyPass /api/ http://127.0.0.1:8085/api/
            ProxyPassReverse /api/ http://127.0.0.1:8085/api/
            RequestHeader set "X-Forwarded-Proto" expr=%{REQUEST_SCHEME}
      insertafter: '^<VirtualHost \*:80>'
      marker: "# {mark} port 80 ANSIBLE MANAGED BLOCK"
    notify: Restart apache
    tags: [ never, install ]
  - name: Port 443 proxy conf
    blockinfile:
      path: /etc/apache2/sites-available/qa.languagedepot.org_admin.conf
      block: |2
            ProxyPreserveHost On
            ProxyPass /api/ http://127.0.0.1:8085/api/
            ProxyPassReverse /api/ http://127.0.0.1:8085/api/
            RequestHeader set "X-Forwarded-Proto" expr=%{REQUEST_SCHEME}
      insertafter: '^<VirtualHost \*:443>'
      marker: "# {mark} port 443 ANSIBLE MANAGED BLOCK"
    notify: Restart apache
    tags: [ never, install ]
  - name: Point admin.qa.languagedepot.org to localhost
    lineinfile:
      path: /etc/hosts
      line: "127.0.0.1 admin.qa.languagedepot.org"
    when: "edit_etc_hosts|default(False)|bool"
    tags: [ never, install ]
  - name: Install Microsoft GPG key and APT feed, step 1
    get_url:
      url: https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
      dest: /tmp/packages-microsoft-prod.deb
      checksum: "sha256:bf47049a5838ac6b7f79063b8908727f2ec2a83d95d3da23333bc3c006016583"
    tags: [ never, install ]
  - name: Install Microsoft GPG key and APT feed, step 2
    shell: dpkg -i packages-microsoft-prod.deb
    args:
      chdir: /tmp/
      creates: /etc/apt/sources.list.d/microsoft-prod.list
    register: mspackages
    tags: [ never, install ]
  - name: Update APT cache
    apt:
      update_cache: yes
    when: mspackages.changed
    tags: [ never, install ]
  - name: Install prerequisites
    apt:
      name:
        - aspnetcore-runtime-3.0
    tags: [ never, install ]
  - name: Ensure Apache2 SSL directory exists
    file:
      path: /etc/apache2/ssl
      state: directory
      owner: root
      group: root
      mode: u=rwx,g=rx,o=rx
    when: 'ssl_certificate|default("") == "selfsigned"'
    tags: [ never, install ]
  - name: Create private key for certificate signing request
    openssl_privatekey:
      path: /etc/apache2/ssl/qa.languagedepot_org_admin.key
    when: 'ssl_certificate|default("") == "selfsigned"'
    tags: [ never, install ]
  - name: Create certificate signing request for self-signed cert
    openssl_csr:
      path: /etc/apache2/ssl/qa.languagedepot_org_admin.csr
      privatekey_path: /etc/apache2/ssl/qa.languagedepot_org_admin.key
      country_name: US
      organization_name: SIL
      common_name: admin.qa.languagedepot.org
    when: 'ssl_certificate|default("") == "selfsigned"'
    tags: [ never, install ]
  - name: Create self-signed certificate
    openssl_certificate:
      path: /etc/apache2/ssl/qa.languagedepot_org_admin.pem
      csr_path: /etc/apache2/ssl/qa.languagedepot_org_admin.csr
      privatekey_path: /etc/apache2/ssl/qa.languagedepot_org_admin.key
      provider: selfsigned
    register: certificate
    when: 'ssl_certificate|default("") == "selfsigned"'
    tags: [ never, install ]
  - name: Copy self-signed certificate to chain file
    copy:
      remote_src: yes
      src: /etc/apache2/ssl/qa.languagedepot_org_admin.pem
      dest: /etc/apache2/ssl/qa.languagedepot_org_admin_chain.pem
    when: 'certificate.changed and ssl_certificate|default("") == "selfsigned"'
    tags: [ never, install ]
  - name: Copy over service files
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
    with_items:
      - ldapi-server.service
      - ldapi-server-configwatcher.service
      - ldapi-server-configwatcher.path
    register: servicefile
    notify: Enable and start LD API server
  - name: Reload systemd service files
    systemd:
      daemon_reload: yes
    when: servicefile.changed
  - name: Install local web browser for testing
    apt:
      name:
        - links
    tags: testing
  # Test by doing "vagrant ssh", then "links https://admin.qa.languagedepot.org/api/users", accept the self-signed certificate, and [D]isplay the response
  # You should get a JSON response that looks like "{ok: true, data: [{user_data}, {user_data}, ..., {user_data}]}"
  handlers:
  - name: Restart apache
    systemd:
      service: apache2
      state: restarted
  - name: Enable and start LD API server
    systemd:
      service: "{{ item }}"
      enabled: yes
      state: started
    with_items:
      - ldapi-server
      - ldapi-server-configwatcher.path
